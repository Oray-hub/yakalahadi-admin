const functions = require('firebase-functions');
const admin = require('firebase-admin');

admin.initializeApp();

// 🏢 Firma onay/red bildirimi fonksiyonu
exports.sendCompanyApprovalNotice = functions
  .runWith({
    minInstances: 0,
    maxInstances: 3000
  })
  .region('us-central1')
  .https.onCall(async (data, context) => {
  try {
    const { companyId, approvalStatus, reason } = data;
    
    if (!companyId || !approvalStatus) {
      throw new functions.https.HttpsError('invalid-argument', 'Gerekli parametreler eksik');
    }
    
    // Firma bilgilerini al
    const companyDoc = await admin.firestore().collection('companies').doc(companyId).get();
    
    if (!companyDoc.exists) {
      throw new functions.https.HttpsError('not-found', 'Firma bulunamadı');
    }
    
    const company = companyDoc.data();
    const companyName = company.company || company.companyTitle || "Firma";
    
    // Company ID'si ile user'ı bul (aynı ID kullanılıyor)
    const userDoc = await admin.firestore().collection('users').doc(companyId).get();
    
    if (!userDoc.exists) {
      throw new functions.https.HttpsError('not-found', 'Kullanıcı bulunamadı');
    }
    
    const userData = userDoc.data();
    const fcmToken = userData.fcmToken;
    
    if (!fcmToken) {
      throw new functions.https.HttpsError('invalid-argument', 'FCM token bulunamadı');
    }
    
    // Şirket yetkilisinin adını ve soyadını birleştir
    const companyOfficerName = company.companyOfficerName || '';
    const companyOfficerSurname = company.companyOfficerSurname || '';
    const companyOfficer = companyOfficerName && companyOfficerSurname 
      ? `${companyOfficerName} ${companyOfficerSurname}` 
      : (company.companyOfficer || 'Değerli Kullanıcı');
    
    // Bildirim mesajını hazırla
    let notificationTitle, notificationBody;
    
    if (approvalStatus === "approved") {
      notificationTitle = "✅ Başvurunuz Onaylandı!";
      notificationBody = `Merhaba ${companyOfficer}, ${companyName} başvurunuz başarıyla onaylandı. Detaylar için uygulamayı kontrol edin.`;
    } else {
      notificationTitle = "❌ Başvurunuz Onaylanmadı";
      notificationBody = `Merhaba ${companyOfficer}, ${companyName} başvurunuz ${reason || "belirtilen sebeplerden dolayı"} onaylanmadı. Lütfen tekrar başvurun.`;
    }
    
    // FCM mesajını hazırla
    const message = {
      token: fcmToken,
      notification: {
        title: notificationTitle,
        body: notificationBody,
      },
      data: {
        type: "company_approval",
        companyId: companyId,
        approvalStatus: approvalStatus,
        reason: reason || "",
        companyName: companyName,
      },
    };
    
    // Bildirimi gönder
    const result = await admin.messaging().send(message);
    
    console.log(`📨 ${companyName} için ${approvalStatus === 'approved' ? 'onay' : 'red'} bildirimi gönderildi:`, result);
    
    return { 
      success: true, 
      message: "Bildirim başarıyla gönderildi",
      companyName: companyName,
      approvalStatus: approvalStatus,
      messageId: result
    };
    
  } catch (error) {
    console.error("❌ Firma onay bildirimi gönderilirken hata:", error);
    throw new functions.https.HttpsError('internal', 'Bildirim gönderilirken hata oluştu', error);
  }
});